name: Testing workflow

on:
  workflow_dispatch:
    inputs:
      current-version:
        description: 'QOSDK version'
        type: string
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.wait-for-bom.outputs.published }}
      qosdk-version: ${{ steps.qosdk-version.outputs.current-version }}
      quarkus-version: ${{ steps.quarkus-version.outputs.quarkus_version }}
      quarkus-platform-branch: ${{ steps.release-qosdk.outputs.quarkus_platform_branch }}
      needs-quarkus-platform-main-pr: ${{ steps.release-qosdk.outputs.need_main_pr }}
    steps:
      - name: Record QOSDK current version
        id: qosdk-version
        run: echo "current-version=${{inputs.current-version}}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: Retrieve Quarkus version
        id: quarkus-version
        run: echo "quarkus_version=$(mvn help:evaluate -Dexpression=quarkus.version -q -DforceStdout)" >> $GITHUB_OUTPUT
        
      - name: Process ${{steps.qosdk-version.outputs.current-version}}
        id: release-qosdk
        run: |
          quarkus_major=$(echo ${{steps.quarkus-version.outputs.quarkus_version}} | cut -d . -f 1,2)
          echo "QOSDK-defined Quarkus major version: ${quarkus_major}"
          
          quarkus_platform_version=$(curl -s https://registry.quarkus.io/client/platforms | jq -r '.platforms[0]."current-stream-id"')
          echo "Current platform-defined Quarkus major version: ${quarkus_platform_version}"
          
          quarkus_platform_branch=main
          if [ "${quarkus_major}" = "${quarkus_platform_version}" ]; then
            quarkus_platform_branch="${quarkus_platform_version}"
          fi
          echo "quarkus_platform_branch=${quarkus_platform_branch}" >> $GITHUB_OUTPUT
          
          if [ "${quarkus_platform_branch}" = "main" ]; then
            echo "quarkus-platform update will target main"
          else
            echo "quarkus-platform update will target ${quarkus_platform_branch}"
            echo "Check if quarkus-platform also needs to be updated on main"
            qosdk_latest=$(curl -sL https://api.github.com/repos/quarkiverse/quarkus-operator-sdk/releases/latest | jq -r ".tag_name")
            echo "Latest QOSDK release: ${qosdk_latest}"
            if [ "${{steps.qosdk-version.outputs.current-version}}" = "${qosdk_latest}" ]; then
              echo "need_main_pr=true" >> $GITHUB_OUTPUT
            else
              echo "No need for PR on quarkus-platform main"
              echo "need_main_pr=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Wait for QOSDK BOM to be published
        uses: quarkusio/monitor-artifact-publication-action@main
        id: wait-for-bom
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          group-id: io.quarkiverse.operatorsdk
          artifact-id: quarkus-operator-sdk-bom
          version: ${{steps.qosdk-version.outputs.current-version}}
          initial-delay: 1
          poll-delay: 2
          poll-iterations: 4
          post-delay: 2

  update-java-plugins:
    needs:
      - test
    uses: ./.github/workflows/release-update-java-operator-plugins.yml
    if: "${{ needs.test.outputs.released }}"
    with:
      qosdk-version: ${{needs.test.outputs.qosdk-version}}
      quarkus-version: ${{needs.test.outputs.quarkus-version}}
    secrets:
      qosdk-bot-token: ${{ secrets.QOSDK_BOT_TOKEN }}

  update-quarkus-platform:
    needs:
      - test
    uses: ./.github/workflows/release-update-quarkus-platform.yml
    if: "${{ needs.test.outputs.released }}"
    with:
      qosdk-version: ${{needs.test.outputs.qosdk-version}}
      quarkus-platform-branch: ${{needs.test.outputs.quarkus-platform-branch}}
      needs-main-pr: ${{ needs.test.outputs.needs-quarkus-platform-main-pr == 'true' }}
    secrets: 
      qosdk-bot-token: ${{ secrets.QOSDK_BOT_TOKEN }}